name: Build_firmware_development

on:
  workflow_dispatch:  # Manually start a workflow
  push:
    branches: development
    paths-ignore:
    - '.github/**' # Ignore changes towards the .github directory
    - '**.md' # Do no build if *.md files changes

jobs:

  tasmota:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: |
        pip install -U platformio
    - name: Run PlatformIO
      run: |
        platformio run -e tasmota
    - uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: ./build_output


  tasmota-minimal:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: |
        pip install -U platformio
    - name: Run PlatformIO
      run: |
        platformio run -e tasmota-minimal
    - uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: ./build_output

  tasmota-lite:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: |
        pip install -U platformio
    - name: Run PlatformIO
      run: |
        platformio run -e tasmota-lite
    - uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: ./build_output

  tasmota32:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: |
        pip install -U platformio
    - name: Run PlatformIO
      run: |
        platformio run -e tasmota32
    - uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: ./build_output

  Upload:
    needs: [tasmota-lite]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: firmware
        path: ./mv_firmware
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./mv_firmware
    - name: Move firmware files in sub-folders
      run: |
        mkdir -p ./firmware/tasmota/languages
        mkdir -p ./firmware/tasmota32/languages
        mkdir -p ./firmware/map
        [ ! -f ./mv_firmware/map/* ] || mv ./mv_firmware/map/* ./firmware/map/
        [ ! -f ./mv_firmware/firmware/tasmota32.* ] || mv ./mv_firmware/firmware/tasmota32.* ./firmware/tasmota32/
        [ ! -f ./mv_firmware/firmware/tasmota32* ] || mv ./mv_firmware/firmware/tasmota32* ./firmware/tasmota32/languages/
        [ ! -f ./mv_firmware/firmware/tasmota-lite.* ] || mv ./mv_firmware/firmware/tasmota-lite.* ./firmware/tasmota/
        [ ! -f ./mv_firmware/firmware/* ] || mv ./mv_firmware/firmware/* ./firmware/tasmota/languages/
    - name: Display files to transfer
      run: ls -R ./*
    - name: Push Firmware files to https://github.com/shivankittech/smart-home-build-files
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source_file: 'firmware'
        destination_repo: 'shivankittech/smart-home-build-files'
        user_email: 'mepunit@gmail.com'
        user_name: 'mepunit'
